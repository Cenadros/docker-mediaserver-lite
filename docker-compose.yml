version: "3.4"

services:

  bazarr:
    container_name: bazarr
    image: linuxserver/bazarr:latest
    restart: unless-stopped
    hostname: bazarr
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
      - UMASK=022 #optional
    volumes:
      - ./config/bazarr:/config # config files
      - ./downloads/complete/movies:/movies # movies folder
      - ./downloads/complete/tv:/tv # tv shows folder
      - ./downloads/complete/anime:/anime # anime shows folder
    ports:
      - 6767:6767
    labels:
      traefik.http.routers.bazarr.rule: Host(`bazarr.localhost`)
      traefik.http.services.bazarr.loadbalancer.server.port: 6767

  homarr:
    image: ghcr.io/ajnart/homarr:latest
    restart: unless-stopped
    hostname: homarr
    container_name: homarr
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - ./config/homarr/configs:/app/data/configs
      - ./config/homarr/icons:/app/public/icons
      - ./config/homarr/data:/data
      - //var/run/docker.sock:/var/run/docker.sock
    ports:
      - 7575:7575
    labels:
      traefik.http.routers.homarr.rule: Host(`localhost`)
      traefik.http.services.homarr.loadbalancer.server.port: 7575

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    hostname: jellyfin
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - ./config/jellyfin:/config
      - ./downloads/complete/tv:/tv # tv shows folder
      - ./downloads/complete/anime:/anime # tv shows folder
      - ./downloads/complete/movies:/movies # movies folder
      - ./downloads:/downloads # download folder
    ports:
      - 8096:8096
    restart: unless-stopped
    labels:
      traefik.http.routers.jellyfin.rule: Host(`jellyfin.localhost`)
      traefik.http.services.jellyfin.loadbalancer.server.port: 8096

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    restart: unless-stopped
    hostname: jellyseerr
    container_name: jellyseerr
    environment:
      - LOG_LEVEL=debug
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - ./config/jellyseerr:/app/config
    ports:
        - 5055:5055
    labels:
      traefik.http.routers.jellyseerr.rule: Host(`jellyseerr.localhost`)
      traefik.http.services.jellyseerr.loadbalancer.server.port: 5055

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    hostname: portainer
    restart: unless-stopped
    ports:
      - 9050:9000
      - 8000:8000
    volumes:
      - //var/run/docker.sock:/var/run/docker.sock
      - ./config/portainer:/data
    labels:
      traefik.http.routers.portainer.rule: Host(`portainer.localhost`)
      traefik.http.services.portainer.loadbalancer.server.port: 9000

  prowlarr:
    container_name: prowlarr
    image: lscr.io/linuxserver/prowlarr:latest
    restart: unless-stopped
    hostname: prowlarr
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - ./config/prowlarr:/config
    ports:
      - 9696:9696
    labels:
      traefik.http.routers.prowlarr.rule: Host(`prowlarr.localhost`)
      traefik.http.services.prowlarr.loadbalancer.server.port: 9696

  qbittorrent:
    image: linuxserver/qbittorrent:14.2.5.99202004250119-7015-2c65b79ubuntu18.04.1-ls93
    restart: unless-stopped
    hostname: qbittorrent
    container_name: qbittorrent
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
      - UMASK_SET=022
      - WEBUI_PORT=8988
    volumes:
      - ./config/qbittorrent:/config
      - ./downloads:/downloads
    ports:
      - 6881:6881
      - 8988:8988
    labels:
      traefik.http.routers.torrent.rule: Host(`torrent.localhost`)
      traefik.http.services.torrent.loadbalancer.server.port: 8988

  radarr:
    container_name: radarr
    image: linuxserver/radarr:latest
    restart: unless-stopped
    hostname: radarr
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - ./timezone:/etc/localtime
      - ./config/radarr:/config # config files
      - ./downloads/complete/movies:/movies # movies folder
      - ./downloads:/downloads # download folder
    ports:
      - 7878:7878
    labels:
      traefik.http.routers.radarr.rule: Host(`radarr.localhost`)
      traefik.http.services.radarr.loadbalancer.server.port: 7878

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:latest
    restart: unless-stopped
    hostname: sonarr
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - ./timezone:/etc/localtime
      - ./config/sonarr:/config # config files
      - ./downloads/complete/tv:/tv # tv shows folder
      - ./downloads/complete/anime:/anime # tv shows folder
      - ./downloads:/downloads # download folder
    ports:
      - 8989:8989
    labels:
      traefik.http.routers.sonarr.rule: Host(`sonarr.localhost`)
      traefik.http.services.sonarr.loadbalancer.server.port: 8989

  traefik:
    image: traefik:v2.3
    container_name: traefik
    command:
      - --log.level=INFO
      #- --api.insecure=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443 #Declares the web-secure entrypoint in Traefik
      - --providers.docker=true
      - --api=true
      - --api.dashboard=true
    restart: unless-stopped
    ports:
      - "80:80"
      - "8084:8080"
      - "443:443" #Docker sends requests on port 443 to Traefik on port 443
    volumes:
      - //var/run/docker.sock:/var/run/docker.sock
    labels:
      traefik.http.routers.dash.rule: Host(`dash.localhost`)
      traefik.http.routers.dash.service: api@internal

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    volumes:
      - //var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_STOPPED=True
      - WATCHTOWER_POLL_INTERVAL=300
      - WATCHTOWER_DEBUG=False
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    restart: unless-stopped
